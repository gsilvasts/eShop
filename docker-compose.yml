version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    restart: always
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - eshop-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - eshop-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  eshop.order.api:
    build:
      context: .
      dockerfile: src/eShopOrder/eShop.Order.API/Dockerfile
    container_name: eshoporderapi
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_HTTP_PORTS=8080
      - MongoDBOrdersCollectionName=Orders
      - MongoDBConnectionString=mongodb://mongodb:27017/eShopOrderDB
      - MongoDBDatabaseName=OrderServiceDB
      - RabbitMQHostName=rabbitmq
      - RabbitMQUserName=guest
      - RabbitMQPassword=guest
      - RabbitMQQueueName=order-service-queue
      - RabbitMQPaymentStatusQueueName=payment-status-queue
    networks:
      - eshop-network

  eshop.order.worker:
    build:
      context: .
      dockerfile: src/eShopOrder/eShop.Order.Worker/Dockerfile
    container_name: eshoporderworker
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - OrderApiBaseUrl=http://eshop.order.api:80
      - RabbitMQHostName=rabbitmq
      - RabbitMQUserName=guest
      - RabbitMQPassword=guest
      - RabbitMQQueueName=payment-status-queue
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - eshop-network

  eshop.payment.worker:
    build:
      context: .
      dockerfile: src/eShopPayment/eShop.Payment.Worker/Dockerfile
    container_name: eshoppaymentworker
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQHostName=rabbitmq
      - RabbitMQUserName=guest
      - RabbitMQPassword=guest
      - RabbitMQQueueName=order-service-queue
      - RabbitMQPaymentStatusQueueName=payment-status-queue
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - eshop-network

volumes:
  mongo-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/mongo
  
networks:
  eshop-network:
    driver: bridge
